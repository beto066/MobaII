//
//  EmojiMemoryGame.swift
//  Memorize
//
//  Created by S√≥sthenes Oliveira Lima on 02/09/23.
//


import Foundation

    //Aqui est√° a nossa ViewModel
class EmojiMemoryGame: ObservableObject {
    //Nossa ViewModel possui uma var que √© o Model, ele pode conversar com o Model de uma v√©z
    @Published private var model: MemoryGame<String> = EmojiMemoryGame.createMemoryGame()
    
    static func createMemoryGame() -> MemoryGame<String> {
        let emojis = ["üßõüèª‚Äç‚ôÇÔ∏è","üï∑Ô∏è","ü§°"]
        return MemoryGame<String>(numberOfPairsOfCards: emojis.count) { pairIndex in
           return emojis[pairIndex]
       }
    }
    
  
    
    // Mark: Access to the model
    // como pegar os cart√µes e tamb√©m deixar
    var cards: Array<MemoryGame<String>.Card> {
        model.cards
    }
    // acesso ao p√∫blico ao modelo, que de outra forma seria privado!
    
        // Mark: Intent(s)
        // A visualiza√ß√£o expressar sua Inten√ß√£o, nesse caso, escolher um cart√£o
        
    func choose (card: MemoryGame<String>.Card) {
        objectWillChange.send()
        model.choose(card: card)
    }
}
